{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import puppeteer, {Browser, Page} from 'puppeteer'\nimport treeKill from 'tree-kill';\n\nimport blockedHostsList from './blocked-hosts';\n\nimport {getHostname, statusLog} from './utils'\n\nimport {SessionExpired} from './errors';\n\n\n//const activitiesProp = [\"all\", \"posts\", \"documents\", \"articles\"];\n\ninterface ScraperUserDefinedOptions {\n    /**\n     * The LinkedIn `li_at` session cookie value. Get this value by logging in to LinkedIn with the account you want to use for scraping.\n     * Open your browser's Dev Tools and find the cookie with the name `li_at`. Use that value here.\n     *\n     * This script uses a known session cookie of a successful login into LinkedIn, instead of an e-mail and password to set you logged in.\n     * I did this because LinkedIn has security measures by blocking login requests from unknown locations or requiring you to fill in Captcha's upon login.\n     * So, if you run this from a server and try to login with an e-mail address and password, your login could be blocked.\n     * By using a known session, we prevent this from happening and allows you to use this scraper on any server on any location.\n     *\n     * You probably need to get a new session cookie value when the scraper logs show it's not logged in anymore.\n     */\n    sessionCookieValue: string;\n    /**\n     * Set to true if you want to keep the scraper session alive. This results in faster recurring scrapes.\n     * But keeps your memory usage high.\n     *\n     * Default: `false`\n     */\n    keepAlive ? : boolean;\n    /**\n     * Set a custom user agent if you like.\n     *\n     * Default: `Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36`\n     */\n    userAgent ? : string;\n    /**\n     * Use a custom timeout to set the maximum time you want to wait for the scraper\n     * to do his job.\n     *\n     * Default: `10000` (10 seconds)\n     */\n    timeout ? : number;\n    /**\n     * Start the scraper in headless mode, or not.\n     *\n     * Default: `true`\n     */\n    headless ? : boolean;\n}\n\ninterface ScraperOptions {\n    sessionCookieValue: string;\n    keepAlive: boolean;\n    userAgent: string;\n    timeout: number;\n    headless: boolean;\n}\n\nasync function autoScroll(page: Page) {\n    await page.evaluate(() => {\n        return new Promise((resolve, reject) => {\n            var totalHeight = 0;\n            var distance = 500;\n            var timer = setInterval(() => {\n                var scrollHeight = document.body.scrollHeight;\n                window.scrollBy(0, distance);\n                totalHeight += distance;\n\n                if (totalHeight >= scrollHeight) {\n                    clearInterval(timer);\n                    resolve();\n                }\n            }, 100);\n        });\n    });\n}\n\n\nexport class LinkedInActivitiesScraper {\n    readonly options: ScraperOptions = {\n        sessionCookieValue: '',\n        keepAlive: false,\n        timeout: 10000,\n        userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',\n        headless: true\n    }\n\n    private browser: Browser | null = null;\n\n    constructor(userDefinedOptions: ScraperUserDefinedOptions) {\n        const logSection = 'constructing';\n        const errorPrefix = 'Error during setup.';\n\n        if (!userDefinedOptions.sessionCookieValue) {\n            throw new Error(`${errorPrefix} Option \"sessionCookieValue\" is required.`);\n        }\n\n        if (userDefinedOptions.sessionCookieValue && typeof userDefinedOptions.sessionCookieValue !== 'string') {\n            throw new Error(`${errorPrefix} Option \"sessionCookieValue\" needs to be a string.`);\n        }\n\n        if (userDefinedOptions.userAgent && typeof userDefinedOptions.userAgent !== 'string') {\n            throw new Error(`${errorPrefix} Option \"userAgent\" needs to be a string.`);\n        }\n\n        if (userDefinedOptions.keepAlive !== undefined && typeof userDefinedOptions.keepAlive !== 'boolean') {\n            throw new Error(`${errorPrefix} Option \"keepAlive\" needs to be a boolean.`);\n        }\n\n        if (userDefinedOptions.timeout !== undefined && typeof userDefinedOptions.timeout !== 'number') {\n            throw new Error(`${errorPrefix} Option \"timeout\" needs to be a number.`);\n        }\n\n        if (userDefinedOptions.headless !== undefined && typeof userDefinedOptions.headless !== 'boolean') {\n            throw new Error(`${errorPrefix} Option \"headless\" needs to be a boolean.`);\n        }\n\n        this.options = Object.assign(this.options, userDefinedOptions);\n\n        statusLog(logSection, `Using options: ${JSON.stringify(this.options)}`);\n    }\n\n    /**\n    * Method to load Puppeteer in memory so we can re-use the browser instance.\n    */\n    public setup = async() => {\n        const logSection = 'setup'\n\n        try {\n            statusLog(logSection, `Launching puppeteer in the ${this.options.headless ? 'background' : 'foreground'}...`)\n\n            this.browser = await puppeteer.launch({\n                headless: this.options.headless,\n                args: [\n                    ...(this.options.headless ? '---single-process' : '---start-maximized'),\n                    '--no-sandbox',\n                    '--disable-setuid-sandbox',\n                    \"--proxy-server='direct://\",\n                    '--proxy-bypass-list=*',\n                    '--disable-dev-shm-usage',\n                    '--disable-accelerated-2d-canvas',\n                    '--disable-gpu',\n                    '--disable-features=site-per-process',\n                    '--enable-features=NetworkService',\n                    '--allow-running-insecure-content',\n                    '--enable-automation',\n                    '--disable-background-timer-throttling',\n                    '--disable-backgrounding-occluded-windows',\n                    '--disable-renderer-backgrounding',\n                    '--disable-web-security',\n                    '--autoplay-policy=user-gesture-required',\n                    '--disable-background-networking',\n                    '--disable-breakpad',\n                    '--disable-client-side-phishing-detection',\n                    '--disable-component-update',\n                    '--disable-default-apps',\n                    '--disable-domain-reliability',\n                    '--disable-extensions',\n                    '--disable-features=AudioServiceOutOfProcess',\n                    '--disable-hang-monitor',\n                    '--disable-ipc-flooding-protection',\n                    '--disable-notifications',\n                    '--disable-offer-store-unmasked-wallet-cards',\n                    '--disable-popup-blocking',\n                    '--disable-print-preview',\n                    '--disable-prompt-on-repost',\n                    '--disable-speech-api',\n                    '--disable-sync',\n                    '--disk-cache-size=33554432',\n                    '--hide-scrollbars',\n                    '--ignore-gpu-blacklist',\n                    '--metrics-recording-only',\n                    '--mute-audio',\n                    '--no-default-browser-check',\n                    '--no-first-run',\n                    '--no-pings',\n                    '--no-zygote',\n                    '--password-store=basic',\n                    '--use-gl=swiftshader',\n                    '--use-mock-keychain'\n                ],\n                timeout: this.options.timeout\n            })\n\n            statusLog(logSection, 'Puppeteer launched!')\n\n            await this.checkIfLoggedIn();\n\n            statusLog(logSection, 'Done!')\n        } catch (err) {\n            // Kill Puppeteer\n            await this.close();\n\n            statusLog(logSection, 'An error occurred during setup.')\n\n            throw err\n        }\n    };\n\n    /**\n    * Create a Puppeteer page with some extra settings to speed up the crawling process.\n    */\n    private createPage = async(): Promise < Page > => {\n        const logSection = 'setup page'\n\n        if (!this.browser) {\n            throw new Error('Browser not set.');\n        }\n\n        // Important: Do not block \"stylesheet\", makes the crawler not work for LinkedIn\n        const blockedResources = ['image', 'media', 'font', 'texttrack', 'object', 'beacon', 'csp_report', 'imageset'];\n\n        try {\n            const page = await this.browser.newPage()\n\n            // Use already open page\n            // This makes sure we don't have an extra open tab consuming memory\n            const firstPage = (await this.browser.pages())[0];\n            await firstPage.close();\n\n            // Method to create a faster Page\n            // From: https://github.com/shirshak55/scrapper-tools/blob/master/src/fastPage/index.ts#L113\n            const session = await page.target().createCDPSession()\n            await page.setBypassCSP(true)\n            await session.send('Page.enable');\n            await session.send('Page.setWebLifecycleState', {\n                state: 'active',\n            });\n\n            statusLog(logSection, `Blocking the following resources: ${blockedResources.join(', ')}`)\n\n            // A list of hostnames that are trackers\n            // By blocking those requests we can speed up the crawling\n            // This is kinda what a normal adblocker does, but really simple\n            const blockedHosts = this.getBlockedHosts();\n            const blockedResourcesByHost = ['script', 'xhr', 'fetch', 'document']\n\n            statusLog(logSection, `Should block scripts from ${Object.keys(blockedHosts).length} unwanted hosts to speed up the crawling.`);\n\n            // Block loading of resources, like images and css, we dont need that\n            await page.setRequestInterception(true);\n\n            page.on('request', (req) => {\n                if (blockedResources.includes(req.resourceType())) {\n                    return req.abort()\n                }\n\n                const hostname = getHostname(req.url());\n\n                // Block all script requests from certain host names\n                if (blockedResourcesByHost.includes(req.resourceType()) && hostname && blockedHosts[hostname] === true) {\n                    statusLog('blocked script', `${req.resourceType()}: ${hostname}: ${req.url()}`);\n                    return req.abort();\n                }\n\n                return req.continue()\n            })\n\n            await page.setUserAgent(this.options.userAgent)\n\n            await page.setViewport({\n                width: 1200,\n                height: 720\n            })\n\n            statusLog(logSection, `Setting session cookie using cookie: ${process.env.LINKEDIN_SESSION_COOKIE_VALUE}`)\n\n            await page.setCookie({\n                'name': 'li_at',\n                'value': this.options.sessionCookieValue,\n                'domain': '.www.linkedin.com'\n            })\n\n            statusLog(logSection, 'Session cookie set!')\n\n            statusLog(logSection, 'Done!')\n\n            return page;\n        } catch (err) {\n            // Kill Puppeteer\n            await this.close();\n\n            statusLog(logSection, 'An error occurred during page setup.')\n            statusLog(logSection, err.message)\n\n            throw err\n        }\n    };\n\n    /**\n    * Method to block know hosts that have some kind of tracking.\n    * By blocking those hosts we speed up the crawling.\n    *\n    * More info: http://winhelp2002.mvps.org/hosts.htm\n    */\n    private getBlockedHosts = (): object => {\n        const blockedHostsArray = blockedHostsList.split('\\n');\n\n        let blockedHostsObject = blockedHostsArray.reduce((prev, curr) => {\n            const frags = curr.split(' ');\n\n            if (frags.length > 1 && frags[0] === '0.0.0.0') {\n                prev[frags[1].trim()] = true;\n            }\n\n            return prev;\n        }, {});\n\n        blockedHostsObject = {\n            ...blockedHostsObject,\n            'static.chartbeat.com': true,\n            'scdn.cxense.com': true,\n            'api.cxense.com': true,\n            'www.googletagmanager.com': true,\n            'connect.facebook.net': true,\n            'platform.twitter.com': true,\n            'tags.tiqcdn.com': true,\n            'dev.visualwebsiteoptimizer.com': true,\n            'smartlock.google.com': true,\n            'cdn.embedly.com': true\n        }\n\n        return blockedHostsObject;\n    }\n\n    /**\n    * Method to complete kill any Puppeteer process still active.\n    * Freeing up memory.\n    */\n    public close = (page ? : Page): Promise < void > => {\n        return new Promise(async(resolve, reject) => {\n            const loggerPrefix = 'close';\n\n            if (page) {\n                try {\n                    statusLog(loggerPrefix, 'Closing page...');\n                    await page.close();\n                    statusLog(loggerPrefix, 'Closed page!');\n                } catch (err) {\n                    reject(err)\n                }\n            }\n\n            if (this.browser) {\n                try {\n                    statusLog(loggerPrefix, 'Closing browser...');\n                    await this.browser.close();\n                    statusLog(loggerPrefix, 'Closed browser!');\n\n                    const browserProcessPid = this.browser.process().pid;\n\n                    // Completely kill the browser process to prevent zombie processes\n                    // https://docs.browserless.io/blog/2019/03/13/more-observations.html#tip-2-when-you-re-done-kill-it-with-fire\n                    if (browserProcessPid) {\n                        statusLog(loggerPrefix, `Killing browser process pid: ${browserProcessPid}...`);\n\n                        treeKill(browserProcessPid, 'SIGKILL', (err) => {\n                            if (err) {\n                                return reject(`Failed to kill browser process pid: ${browserProcessPid}`);\n                            }\n\n                            statusLog(loggerPrefix, `Killed browser pid: ${browserProcessPid} Closed browser.`);\n                            resolve()\n                        });\n                    }\n                } catch (err) {\n                    reject(err);\n                }\n            }\n\n            return resolve()\n        })\n\n    }\n\n    /**\n     * Simple method to check if the session is still active.\n     */\n    public checkIfLoggedIn = async() => {\n        const logSection = 'checkIfLoggedIn';\n\n        const page = await this.createPage();\n\n        statusLog(logSection, 'Checking if we are still logged in...')\n\n        // Go to the login page of LinkedIn\n        // If we do not get redirected and stay on /login, we are logged out\n        // If we get redirect to /feed, we are logged in\n        await page.goto('https://www.linkedin.com/login', {\n            waitUntil: 'networkidle2',\n            timeout: this.options.timeout\n        })\n\n        const url = page.url()\n\n        const isLoggedIn = !url.endsWith('/login')\n\n        await page.close();\n\n        if (isLoggedIn) {\n            statusLog(logSection, 'All good. We are still logged in.')\n        } else {\n            const errorMessage = 'Bad news, we are not logged in! Your session seems to be expired. Use your browser to login again with your LinkedIn credentials and extract the \"li_at\" cookie value for the \"sessionCookieValue\" option.';\n            statusLog(logSection, errorMessage)\n            throw new SessionExpired(errorMessage)\n        }\n    };\n\n    /**\n     * Method to scrape a user profile.\n     */\n    public run = async(profileUrl: string) => {\n        const logSection = 'run'\n\n        const scraperSessionId = new Date().getTime();\n\n        if (!this.browser) {\n            throw new Error('Browser is not set. Please run the setup method first.')\n        }\n\n        if (!profileUrl) {\n            throw new Error('No profileUrl given.')\n        }\n\n        if (!profileUrl.includes('linkedin.com/')) {\n            throw new Error('The given URL to scrape is not a linkedin.com url.')\n        }\n\n        if (profileUrl.charAt(profileUrl.length - 1) !== \"/\")\n            profileUrl = profileUrl.concat(\"/\");\n\n        try {\n            // Eeach run has it's own page\n            var page;\n\n            try {\n                  page = await this.createPage();\n            } catch (error) {\n                  throw new Error('Error creating page')\n            }\n            \n\n            statusLog(logSection, `Navigating to LinkedIn profile activites: ${profileUrl}detail/recent-activity/`, scraperSessionId)\n\n            await page.goto(`${profileUrl}detail/recent-activity/`, {\n                // Use \"networkidl2\" here and not \"domcontentloaded\".\n                // As with \"domcontentloaded\" some elements might not be loaded correctly, resulting in missing data.\n                waitUntil: 'networkidle2',\n                timeout: this.options.timeout\n            }).catch(() => {});\n\n            statusLog(logSection, 'LinkedIn profile activites page loaded!', scraperSessionId)\n            await autoScroll(page);\n\n            statusLog(logSection, 'Parsing data...', scraperSessionId)\n\n            /*\n            // Only click the expanding buttons when they exist\n            const activityType = '.pv-recent-activity-detail__pill.mr2.artdeco-pill.artdeco-pill--slate.artdeco-pill--3.artdeco-pill--toggle.ember-view';\n            const activityPost = '.feed-shared-update-v2.feed-shared-update-v2--minimal-padding.relative.full-height.feed-shared-update-v2--e2e.Elevation-2dp.ember-view';\n\n            let result = {\n                all: \"\",\n                posts: \"\",\n                articles: \"\",\n                documents: \"\"\n            };\n            */\n\n            /*============= GET ===============*/\n\n            /*\n            await page.$$eval(activityType, anchors => {\n                anchors.forEach(async (anchor, index) => {\n                    // @ts-ignore\n                    anchor.click();\n                    await page.waitFor(2000);\n                    result[activitiesProp[index]] = await page.$$eval(activityPost, posts => posts.map(post => post.getAttribute(\"data-urn\")));\n                });\n            });*/\n\n            const activityPost = '.pv-recent-activity-detail__outlet-container';\n\n            const result = await page.$$eval(activityPost, (nodes) => {\n   \n                const data = [] as  any;\n                for (const node of nodes) {\n                    console.log(node);\n                    var containers = node.querySelectorAll('div.feed-shared-update-v2');\n                    containers.forEach(function(element) {\n                        const urn = element.getAttribute(\"data-urn\");\n\n                        const text_div = element.querySelector(\"div.feed-shared-text\");\n                        const actual = text_div?.querySelector(\"span\")?.querySelector(\"span\")?.querySelector(\"span\");\n\n                        const act_text = (actual?.innerText || actual?.textContent);\n\n                        data.push({urn,act_text});   \n                    });\n\n                    \n             \n                }\n                return data;\n            });\n\n            if (!this.options.keepAlive) {\n                statusLog(logSection, 'Not keeping the session alive.')\n\n                await this.close(page)\n\n                statusLog(logSection, 'Done. Puppeteer is closed.')\n            } else {\n                statusLog(logSection, 'Done. Puppeteer is being kept alive in memory.')\n                // Only close the current page, we do not need it anymore\n                await page.close()\n            }\n\n            return result;\n        } catch (err) {\n            // Kill Puppeteer\n            await this.close()\n\n            statusLog(logSection, 'An error occurred during a run.')\n\n            // Throw the error up, allowing the user to handle this error himself.\n            throw err;\n        }\n    }\n}\n"]}